[versions]
compileSdk = "35"
minSdk = "24"
jdk = "17"
agp = "8.7.2"
kotlin = "2.0.21"
coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.9.3"
composeBom = "2024.11.00"
appcompat = "1.7.0"
material = "1.12.0"
mockk = "1.13.3"
navigationCompose = "2.8.4"
kotlinxSerializationJson = "1.6.3"
serializationGradlePlugin = "1.9.0"
retrofit = "2.9.0"
okhttp = "5.0.0-alpha.2"
coilCompose = "2.7.0"
roomKtx = "2.6.1"
roomRuntime = "2.6.1"
ksp = "2.0.21-1.0.27"
hiltDagger = "2.51.1"
hilt = "1.2.0"
hiltGradlePlugin = "2.51.1"

kotlinxCoroutines = "1.8.1"
androidxCore = "2.2.0"


[libraries]
# Native Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
# Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-material = { module = "androidx.compose.material:material" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-animation = { group = "androidx.compose.animation", name = "animation" }
# Google
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
# Hilt
hilt-dagger-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltDagger" }
hilt-dagger-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltDagger" }
hilt-dagger-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltDagger" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt" }
# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
# okhttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
# Server Image
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
# Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomRuntime" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomKtx" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
# UniTest
junit = { module = "junit:junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidxCore" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltDagger" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltGradlePlugin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serializationGradlePlugin" }

